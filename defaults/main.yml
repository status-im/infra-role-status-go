---
# Main service name
status_go_service_name: 'status-go'
status_go_service_path: '/docker/{{ status_go_service_name }}'
status_go_service_compose: '{{ status_go_service_path }}/docker-compose.yml'

# Options: ERROR|WARN|INFO|DEBUG|TRACE
status_go_log_level: 'INFO'

# History node access password
status_go_wnode_password: 'status-offline-inbox'
status_go_eth_network: 4
# Optional Waku Node configuration
status_go_waku_enabled: true
status_go_waku_db_name: waku
# Topic for envelopes
status_go_topic: 'whispermail'
# Confirmations
status_go_confirmations_enabled: false

# Status-go node
status_go_node_cont_name: '{{ status_go_service_name }}-node'
status_go_node_cont_vol: '{{ status_go_service_path }}/node'
status_go_node_cont_tag: 'latest'
status_go_node_cont_image: 'statusteam/status-go:{{ status_go_node_cont_tag }}'
status_go_node_listen_port: 30504
status_go_node_alt_port: 443
status_go_node_rpc_port: 8545
status_go_node_pprof_enabled: false
status_go_node_pprof_port: 52525
status_go_node_metrics_enabled: true
status_go_node_metrics_port: 9305
# Alternative PostgreSQL database for whisper offline inbox
status_go_db_cont_name: '{{ status_go_service_name }}-db'
status_go_db_cont_vol: '{{ status_go_service_path }}/db'
status_go_db_cont_image: 'postgres:9.6-alpine'
status_go_db_cont_port: 5432
status_go_db_cont_uid: 70
status_go_db_host_uid: '{{ 100000 + status_go_db_cont_uid | int }}'
# PostgreSQL connection settings
status_go_db_user: ~
status_go_db_pass: ~
status_go_db_host: db
status_go_db_port: '{{ status_go_db_cont_port }}'
status_go_db_opts: '?sslmode=disable'
# Default of 0.2 results in vacuum once every +10 days
status_go_db_vacuum_scale_factor: 0.05

# container image auto-updates
status_go_watchtower_enabled: true
# Push Notifications Server configuration
status_go_pn_server_enabled: true
status_go_pn_server_gorush_url: 'https://gorush.status.im'

# backups configuration
status_go_db_backup_enabled: true
status_go_db_backup_name: 'dump-{{ status_go_db_cont_name }}'
status_go_db_backup_user: 'root'
status_go_db_backup_frequency: 'daily'
status_go_db_backup_timeout: 3600
status_go_db_backup_retention: 1

# auto restarts
status_go_restart_enabled: false
status_go_restart_timer_enabled: '{{ status_go_restart_enabled }}'
status_go_restart_timer_name: 'restart-{{ status_go_service_name }}'
status_go_restart_timer_frequency: 'daily'
status_go_restart_timer_random_delay_sec: 21600 # 6 hours

# resources limits to avoid killing the host
cont_mem_limit: '{{ (ansible_memtotal_mb * 0.8) | int }}'

# general container management
compose_recreate: 'smart'
compose_state: 'present'
compose_restart: false
